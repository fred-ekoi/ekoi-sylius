name: Deploy Sylius

on:
  push:
    branches:
      - _preprod  # Change to your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.1']  # Sylius requires PHP 8.1+ at the time of writing

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up PHP with Composer
    - name: Set up PHP ${{ matrix.php-versions }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, intl, pdo_mysql
        coverage: none
        tools: composer

    # Step 3: Cache Composer dependencies
    - name: Get Composer Cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    # Step 4: Install Composer dependencies
    - name: Install Composer dependencies
      run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

    # Step 5: Build assets (optional, only if using Webpack Encore or other frontend tools)
    - name: Build assets
      run: |
        npm install
        npm run build

    # Step 6: Run database migrations (optional)
    - name: Run Doctrine migrations
      run: php bin/console doctrine:migrations:migrate --no-interaction

    # Step 7: Deploy to the server using SSH
    - name: Deploy to production server
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST_PREPROD }}
        username: ${{ secrets.SSH_USER_PREPROD }}
        key: ${{ secrets.SSH_PASSWORD_PREPROD }}
        script: |
          cd /path/to/your/sylius-project
          git pull origin main
          composer install --no-dev --optimize-autoloader
          php bin/console doctrine:migrations:migrate --no-interaction
          npm install && npm run build
          php bin/console cache:clear --no-warmup
          php bin/console cache:warmup

    # Step 8: Clear cache and restart services if necessary
    - name: Clear cache and restart services (optional)
      run: |
        sudo systemctl restart php8.1-fpm
        sudo systemctl restart nginx

