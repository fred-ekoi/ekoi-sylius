name: CI/CD preprod
on:
    push:
        branches: [_preprod]

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            # Mandatory: fetch the current repository
            - name: Checkout repository
              uses: actions/checkout@v3  # Updated to v3

            # Use cache system for Composer to be faster
            - name: Get Composer Cache Directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache composer (vendor)
              uses: actions/cache@v3  # Updated to v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            # Define the right PHP environment
            # https://github.com/shivammathur/setup-php (community)
            - name: Environment for PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"
                  tools: composer:v2
                  coverage: none
              env:
                  update: true

            # Create .env.local file
            - name: Create .env.local file
              run: |
                  echo "APP_ENV=${{ secrets.APP_ENV_PREPROD }}" >> .env.local
                  echo "DATABASE_URL=${{ secrets.DATABASE_URL_PREPROD }}" >> .env.local
                  echo "APP_URL=${{ secrets.APP_URL_PREPROD }}" >> .env.local
                  echo "MAILER_DSN=${{ secrets.MAILER_DSN_PREPROD }}" >> .env.local

            # Install composer dependencies and dump environment
            - name: Composer install & dump-env
              run: |
                  composer config repositories.sylius composer https://sylius.repo.packagist.com/16h33/
                  composer config --global --auth http-basic.sylius.repo.packagist.com token ${{ secrets.SYLIUS_PACKAGIST_TOKEN }}
                  composer install --no-progress --no-scripts --prefer-dist -a
                  composer dump-env ${{ secrets.APP_ENV_PREPROD }}

            # Use cache system for NPM to be faster
            - name: Cache NPM (node_modules)
              uses: actions/cache@v3  # Updated to v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            # Define the right Node.js environment
            - name: Environment for deploy
              uses: actions/setup-node@v3  # Updated to v3
              with:
                  node-version: "20"

            # NPM run build
            - name: NPM build
              run: |
                  node -v
                  npm ci --cache .npm --unsafe-perm --prefer-offline
                  npm run build

            # Deploy repository onto the host provided in Github Secrets, including downloaded artifacts and files created (like vendor folder)
            # Deploy is running thanks to "Deployator" NPM dependency (https://github.com/la-haute-societe/deployator)
            # See "deployment-config.js" to get the config in use
            - name: Deploy on preprod
              env:
                  SSH_HOST: ${{ secrets.SSH_HOST_PREPROD }}
                  SSH_LOGIN: ${{ secrets.SSH_LOGIN_PREPROD }}
                  SSH_PWD: ${{ secrets.SSH_PASSWORD_PREPROD }}
                  SSH_PATH: ${{ secrets.SSH_PATH_PREPROD }}
              run: |
                  npx --cache .npm deployator deploy --config deployment-config.js --environment=prod
